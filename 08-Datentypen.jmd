# Datentypen
Ein grundlegender Baustein von Programmen sind Werte (*values*), wie zum Beispiel Zahlen oder Buchstaben.
Jeder Wert gehört zu einem bestimmten Datentypen.
Dieser Datentyp kann mit der Funktion `typeof()` abgefragt werden:
```julia; term=true
typeof(2)
typeof(42.0)
typeof("hello world")
typeof('c')
typeof(true)
```

Alle Typen in Julia sind in einer Art Hierarchie strukturiert.
Beispielsweise ist `Integer` ein Subtyp von `Real` und Real wiederum ein Subtyp von `Number`.
Dabei hat er Datentyp `Real` neben `Integer` noch weitere Subtypen.
## Zahlen
In Julia sind verschiedene Datentypen für Zahlen definiert.
Im Beispiel oben ist der ganzzahlige Wert `2` vom Typ `Int64` und `42.0` vom Typ `Float64`.
Diese beiden Datentypen werden für Zahlen am häufigsten verwendet.
Daneben bietet Julia allerdings noch die Typen `Complex` und `Rational` für komplexe und rationale Zahlen.
```julia; term=true
typeof(1.3+4im)
typeof(23//4)
```

Mithilfe der Operatoren `+`, `-`, `*` und `/` können Zahlen addiert, subtrahiert, multipliziert und dividiert werden:
```julia; term=true
17 + 2
13 - 4
1 * 19
38 / 2
```


Konvertieren und runden
Operator precedence
## Char und String und Symbol
find replace
## Boolean
Logische Operationen, Operator precedence
## String zu Zahl und Zahl zu String
## Funktionen mit Zahlen
zero, one, rand ...
