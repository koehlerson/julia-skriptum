# Variablen

Variablen ermöglichen es, einer Zeichenfolge einen Wert zuzuweisen und diesen Wert über diese Zeichenfolge wieder abzurufen bzw. manchmal auch zu verändern.
Die Zuweisung (*assignment*) erfolgt durch `=`.
Dabei wird eine neue Variable erstellt und der eingegebenen Wert zugewiesen:
```julia; term=true
message = "Das ist ein String"
n = 19
α = 17.32
```
Die erste Zeile weist der Variable `message` ein `String` zu, die zweite Zeile übergibt ein `Integer` an die Variable `n` und die dritte Zeile weist `α` eine Zahl vom Typ `Float` zu.
Einige relevante Datentypen werden später im Abschnitt Datentypen genauer beschrieben.

Nach der Zuweisung von Variablen können diese im Code verwendet werden:
```julia; term=true
a = 1; b = 2;
summe = a + b
```
Im ersten Ausdruck dieses Beispiels werden den Variablen `a` und `b` ganzzahlige Werte zugewiesen.
Die beiden Semikola (`;`) haben dabei unterschiedliche Funktionen.
Das erste Semikolon trennt die beiden Zuweisungen voneinander.
Auf diese Weise können beide Zuweisungen in einer Zeile erfolgen.
Das abschließende Semikolon unterbindet die Ausgabe des letzten Wertes in der REPL.
Ohne dieses Semikolon würde nach Eingabe des ersten Ausdruckes der Wert `2` in der REPL ausgegeben werden.
Um die Lehrunterlagen etwas kompakter zu halten, wird in vielen Beispiel diese Schreibweise verwendet.

Generell sollten aussagekräftige Namen für Variablen gewählt werden.
Meist ist dadurch bereits ohne Kommentare ersichtlich, wofür die Variable verwendet wird.

Variablennamen können beliebig lange sein und nahezu alle Unicode-Zeichen enthalten, dürfen allerdings nicht mit Zahlen beginnen.
Großbuchstaben können in Variablennamen verwendet werden, meist kommen aber nur Kleinbuchstaben zum Einsatz.
Unicode-Zeichen, wie z.B. `α`, können in der Julia REPL durch Eingeben von Abkürzungen ähnlich zu \LaTeX{} und Drücken der `TAB`-Taste erstellt werden (z.B. `\alpha TAB`).
Bei aus mehreren Wörten zusammengesetzten Variablennamen bietet es sich an, die Wörter durch einen Unterstrich, `_`, zu trennen (z.B. `sum_of_squares`).

Wird ein ungültiger Name für eine Variable verwendet, tritt ein *Syntax Error* auf:
```{julia; term=true}
42number = "meaning of life"
```

Zusätzlich tritt ein *Syntax Error* auf, wenn festgelegte *keywords* (z.B. `for` oder `end`) als Name festgelegt werden.
Die Julia-Dokumentation enthält unter [Manual/Variables](https://pkg.julialang.org/docs/julia/THl1k/1.1.1/manual/variables.html) noch nähere Informationen zu Variablen und deren Namen. 
